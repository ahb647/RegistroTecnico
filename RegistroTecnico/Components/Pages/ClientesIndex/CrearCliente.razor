@page "/ClientesIndex/CrearCliente"
@inject TecnicoServices tecnicoService
@inject ClienteServices clienteService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Crear Cliente</PageTitle>

<EditForm Model="@cliente" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator /><DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Nuevo Cliente</h5>
            </div>

            <div class="card-body">

                @* Nombre *@
                <div class="mb-3">
                    <label class="form-label"><strong>Nombre</strong></label>
                    <InputText class="form-control" @bind-Value="@cliente.Nombres" />
                    <ValidationMessage For="@(() =>cliente.Nombres)" />
                </div>

                @* Dirección *@
                <div class="mb-3">
                    <label class="form-label"><strong>Dirección</strong></label>
                    <InputText class="form-control" @bind-Value="@cliente.Direccion" />
                    <ValidationMessage For="@(() =>cliente.Direccion)" />
                </div>

                @* RNC *@
                <div class="mb-3">
                    <label class="form-label"><strong>RNC</strong></label>
                    <InputNumber class="form-control" @bind-Value="@cliente.Rnc" />
                    <ValidationMessage For="@(() =>cliente.Rnc)" />
                </div>

                @* Límite de Crédito *@
                <div class="mb-3">
                    <label class="form-label"><strong>Límite de Crédito</strong></label>
                    <InputNumber class="form-control" @bind-Value="@cliente.LimiteCredito" />
                    <ValidationMessage For="@(() =>cliente.LimiteCredito)" />
                </div>

                @* Técnico Asignado *@
                <div class="mb-3">
                    <label class="form-label"><strong>Técnico Asignado</strong></label>
                    <InputSelect class="form-control" @bind-Value="@cliente.TecnicoID">
                        <option value="">Seleccione un Técnico</option>
                        @foreach (var tecnico in ListaTecnicos)
                        {
                            <option value="@tecnico.TecnicoID">@tecnico.Nombre</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() =>cliente.TecnicoID)" />
                </div>
            </div>

            <div class="card-footer text-center mt-2">
                <a href="/ClientesIndex/Clientes" class="btn btn-secondary"> <span class="bi bi-arrow-left"></span> Volver</a>
                <button type="submit" class="btn btn-primary bi bi-floppy"> Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public RegistroTecnico.Models.Clientes cliente { get; set; } = new RegistroTecnico.Models.Clientes();
    public List<RegistroTecnico.Models.Tecnicos> ListaTecnicos { get; set; } = new List<RegistroTecnico.Models.Tecnicos>();


    protected override async Task OnInitializedAsync()
    {

        ListaTecnicos = await tecnicoService.Listar(t => true); // Obtener la lista de técnicos disponibles

    }

    private async Task OnValidSubmit()
    {
        // Aquí se guarda el cliente. Si el cliente no tiene ID, se está creando uno nuevo
        if (await clienteService.Guardar(cliente))
        {
            // Después de guardar el cliente, limpiamos el formulario
            cliente = new RegistroTecnico.Models.Clientes();
        }

        // Redirige a la página de clientes después de guardar el nuevo cliente
        navigationManager.NavigateTo("/ClientesIndex/Clientes");
    }
}