@page "/Tecnicos/TecnicosIndex"
@using RegistroTecnico.Models
@using RegistroTecnico.Services
@inject TecnicoServices tecnicoService
@inject NavigationManager navigationManager

<PageTitle>Registro de Técnicos</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header space-between d-flex justify-content-between align-items-center">
            <h5 class="card-title">Registro de Técnicos</h5>
            <input type="text" class="form-control w-25"
                   placeholder="Buscar por nombre..."
                   @bind="filtroBusqueda"
                   @oninput="ActualizarFiltroBusqueda" />
            <a href="/Tecnicos/CreateTecnico" class="btn btn-primary">
                <span class="bi bi-plus-square"></span> Crear
            </a>
        </div>

        <div class="card-body">
            <table class="table table-hover">
                <thead class="table table-striped text-black">
                    <tr>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th>Sueldo por Hora</th>
                        <th>Opciones</th>
                    </tr>
                </thead>
                <tbody>
                    @if (TecnicosFiltrados.Any())
                    {
                        @foreach (var tecnico in TecnicosFiltrados)
                        {
                            <tr>
                                <td>@tecnico.TecnicoID</td>
                                <td>@tecnico.Nombre</td>
                                <td>@tecnico.SueldoHora</td>
                                <td class="text-center">
                                    <a href="EditTecnico/@tecnico.TecnicoID" class="btn btn-outline-primary bi bi-pencil-square"></a>
                                    <a href="/DeleteTecnico/@tecnico.TecnicoID" class="btn btn-outline-danger bi bi-trash"></a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center">No hay técnicos registrados o no coinciden con la búsqueda.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="card-footer">
            <label>Total Técnicos: @TecnicosFiltrados.Count()</label>
        </div>
    </div>
</div>

@code {
    private string filtroBusqueda { get; set; } = "";
    private List<RegistroTecnico.Models.Tecnicos> ListaTecnicos { get; set; } = new List<RegistroTecnico.Models.Tecnicos>();
    private List<RegistroTecnico.Models.Tecnicos> TecnicosFiltrados { get; set; } = new List<RegistroTecnico.Models.Tecnicos>();

    protected override async Task OnInitializedAsync()
    {
        // Cargar la lista de técnicos desde el servicio
        ListaTecnicos = await tecnicoService.Listar(t => true);

        // Inicializar la lista filtrada con todos los técnicos
        TecnicosFiltrados = new List<RegistroTecnico.Models.Tecnicos>(ListaTecnicos);
    }

    private void ActualizarFiltroBusqueda(ChangeEventArgs e)
    {
        filtroBusqueda = e.Value?.ToString() ?? "";
        TecnicosFiltrados = ListaTecnicos
            .Where(t => string.IsNullOrWhiteSpace(filtroBusqueda) ||
                        t.Nombre.Contains(filtroBusqueda, StringComparison.OrdinalIgnoreCase))
            .ToList();

        StateHasChanged(); // Forzar actualización de la UI
    }
}
